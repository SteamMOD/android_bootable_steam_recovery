// locale data for recovery

#define MENU_REBOOT_RECOVERY "Reboot system now..."
#define MENU_APPLY_SDCARD "Apply sdcard:update.zip\001Apply the update that can be found on the internal SD card."
#define MENU_APPLY_EXTSDCARD "Apply external_sd:update.zip\001Apply the update that can be found on the external SD card."
#define MENU_WIPE_ALL "Wipe data/factory reset\001Format /data, /dbdata and /cache partitions to get the system back to factory state."
#define MENU_WIPE_CACHE "Wipe cache partition\001Format the /cache partition. This contains information for the  recovery process and some temporary files."
#define MENU_INSTALL_SDCARD "Install zip from sdcard..."
#define MENU_BACKUP "Backup and restore..."
#define MENU_ADV_ULK "Steam Features..."
#define MENU_AFTERBURNER "Afterburner"

#define REBOOT_HEADER "Reboot menu"
#define REBOOT_NORMAL "Reboot normally\001Reboots normally, into Android"
#define REBOOT_RECOVERY "Reboot into recovery\001Reboots into recovery mode"
#define REBOOT_DOWNLOAD "Reboot into download\001Reboots into download mode for flashing via Odin"

#define MOUNTS_USBMASS_HEADER "USB Mass Storage device\nLeaving this menu unmount\nyour SD card from your PC."
#define MOUNTS_USBMASS_EXIT "Unmount"

#define MENU_BLN_HEADERS "BacklightNotification Menu"
#define MENU_BLN_ITEM "BackLightNotification"
#define MENU_BLN_HELP "This option will switch BackLightNotification on or off. When BLN is tuned on the backlights on the capacitive buttons will turn on in case of events (like a new email)."
#define MENU_BLN_NOCONFIG "Could not create config file\n"

#define FILEMANAGER_PRESSBACK "Press back to exit file manager.\n"
#define FILEMANAGER_HEADER "File manager"
#define FILEMANAGER_COMMANDS "Commands"
#define FILEMANAGER_CLIPBOARD_MODE "Clipboard mode"
#define FILEMANAGER_CLIPBOARD_MODE_HELP "In clipboard mode you can select multiple elements, which will be saved to the clipboard. You can then use some commands with the contents of the clipboard, like copying or deleting them. Exiting clipboard mode won't clear the clipboard so you can select multiple elements in various directories"
#define FILEMANAGER_CONSOLE "Run console"
#define FILEMANAGER_CONSOLE_HELP "Starts a very minimal on-screen console session, where you can enter commands"
#define FILEMANAGER_PARTMAN "Run partition manager"
#define FILEMANAGER_PARTMAN_HELP "Starts the partition manager, where you can mount/unmount devices, and enable the USB mass storage mode, for the sdcard"
#define FILEMANAGER_SAVELOG "Save log files to sdcard"
#define FILEMANAGER_SAVELOG_HELP "Saves all the log files to the sdcard for furhter analysis"
#define FILEMANAGER_CLIP_MOVE "Move from clipboard"
#define FILEMANAGER_CLIP_COPY "Paste from clipboard"
#define FILEMANAGER_CLIP_RM "Delete files in clipboard"
#define FILEMANAGER_CLIP_CLEAR "Clear clipboard"
#define FILEMANAGER_CLIPBOARD "Clipboard"

#define FILEMANAGER_FILECMD_HEADER "File commands"
#define FILEMANAGER_FILECMD_CLIPADD "Add to clipboard"
#define FILEMANAGER_FILECMD_CAT "Cat file"
#define FILEMANAGER_FILECMD_HEAD "Show head of file"
#define FILEMANAGER_FILECMD_RM "Delete file"

#define FILEMANAGER_DIR "Dir: %s\n"

#define CONSOLE_BACK "Press back key to exit console\n"
#define CONSOLE_BADDIR "Could not switch directory\n"

#define APPROOT_HEADER "Install superuser"
#define APPROOT_SIMPLE "Simple: install busybox+su\001This option will install busybox and superuser binaries, but will not remove old toolbox commands, so they will always take precedence"
#define APPROOT_ADV "Adv: also rm some toolbox cmds\001This option will install busybox and superuser binaries, and will remove some toolbox commands: cat, chmod, chown, dd, ln, ls, mkdir, mv, rm, rmdir"
#define APPROOT_EXT "Simple: install busybox+su\001This option will install busybox and superuser binaries, and will remove most toolbox commands: cat, chmod, chown, dd, ln, ls, mkdir, mv, rm, rmdir, cmp, date, df, dmesg, id, insmod, kill, lsmod, mount, printenv, ps, renice, sleep, sync, top, umount"

#define APPROOT_COPYING "Copying Superuser and Busybox files to /system/xbin\n"
#define APPROOT_COPYING_SU "Copying su binary\n"
#define APPROOT_COPYING_APK "Copying Superuser.apk\n"
#define APPROOT_COPYING_BB "Copying Busybox\n"
#define APPROOT_CRSYMLINK "Creating busybox symlinks\n"

#define APPROOT_CONFIRM_ROOT "Confirm rooting!"
#define APPROOT_CONFIRM_YES "Yes - install root binaries"

#define APPROOT_RMSOME "Removing some toolbox links\n"
#define APPROOT_RMMORE "Removing more toolbox links\n"
#define APPROOT_DONE "Done!\n"

#define MENU_TWEAKS_HEADER "Boot options"
#define MENU_TWEAKS_ADB "ADB startup settings"
#define MENU_TWEAKS_ADB_DEF "Default settings"
#define MENU_TWEAKS_ADB_DEF_HELP "Only enable ADB if asked by the user in android config"
#define MENU_TWEAKS_ADB_REC "Always enable ADB in recovery"
#define MENU_TWEAKS_ADB_REC_HELP "Always enable ADB when running in recovery mode"
#define MENU_TWEAKS_ADB_ON "Always enable ADB"
#define MENU_TWEAKS_ADB_ON_HELP "ADB will always be enabled"
#define MENU_TWEAKS_ADB_ROOT "ADB security settings"
#define MENU_TWEAKS_ADB_ROOT_OFF "Don't allow ADB to be run as root"
#define MENU_TWEAKS_ADB_ROOT_OFF_HELP "Disallow ADB to be run as root. This is the default configuration"
#define MENU_TWEAKS_ADB_ROOT_REC "Run ADB as root during recovery"
#define MENU_TWEAKS_ADB_ROOT_REC_HELP "ADB will be run as root during recovery mode"
#define MENU_TWEAKS_ADB_ROOT_ASK "Allow ADB to be switched to root"
#define MENU_TWEAKS_ADB_ROOT_ASK_HELP "ADB will not be run as root, but you can switch to it using the 'adb root' command"
#define MENU_TWEAKS_ADB_ROOT_ALWAYS "Always run ADB as root"
#define MENU_TWEAKS_ADB_ROOT_ALWAYS_HELP "Always starts ADB as root"
#define MENU_TWEAKS_BOOTLOG "Boot logging settings"
#define MENU_TWEAKS_BOOTLOG_NO "Don't display logs at boot"
#define MENU_TWEAKS_BOOTLOG_NO_HELP "Will not display logs at boot, unless nescessary"
#define MENU_TWEAKS_BOOTLOG_REC "Only display in recovery mode"
#define MENU_TWEAKS_BOOTLOG_REC_HELP "Will only display logs in recovery mode"
#define MENU_TWEAKS_BOOTLOG_ALWAYS "Always display logs"
#define MENU_TWEAKS_BOOTLOG_ALWAYS_HELP "Will always display logs during startup"
#define MENU_TWEAKS_BOOTANIM "Boot animation settings"
#define MENU_TWEAKS_BOOTANIM_LOG "Log display"
#define MENU_TWEAKS_BOOTANIM_LOG_HELP "Will display the logs during bootanimation stage"
#define MENU_TWEAKS_BOOTANIM_DEF "Samsung's boot animation"
#define MENU_TWEAKS_BOOTANIM_DEF_HELP "Will display the default Samsung boot animation"
#define MENU_TWEAKS_BOOTANIM_ANDROID "Android boot animation"
#define MENU_TWEAKS_BOOTANIM_ANDROID_HELP "Will display the Android boot animation. It has to be installed on the ROM for this option to work"
#define MENU_TWEAKS_TWEAKS "Startup Tweaks"
#define MENU_TWEAKS_IOSCHED "IO scheduler"
#define MENU_TWEAKS_IOSCHED_HELP "Tweaked settings of the disk io scheduler more for flash memory. Defaults are optimized for spinning harddisks. Lowered the idle wait, re-enable the low latency mode of cfq, removed the penalty for back-seeks and explicitly tell the kernel the storage is not a spinning disk."
#define MENU_TWEAKS_KERNELVM "Kernel VM management"
#define MENU_TWEAKS_KERNELVM_HELP "Set tendency of kernel to swap to minimum, since we don't use swap anyway.\nLower the amount of unwritten write cache to reduce lags when a huge write is required.\nIncrease tendency of kernel to keep block-cache to help with slower RFS filesystem.\nIncrease minimum free memory, in theory this should make the kernel less likely to suddenly run out of memory."
#define MENU_TWEAKS_KERNELSCHED "Kernel scheduler"
#define MENU_TWEAKS_KERNELSCHED_HELP "Make the task scheduler more 'fair' when multiple tasks are running. This has a huge effect on UI and App responsiveness. These values (less aggressive settings) are 20%% of the Linux defaults, and about half of the Android defaults."
#define MENU_TWEAKS_MISC "Misc tweaks"
#define MENU_TWEAKS_MISC_HELP "Manually set the starting dalvik heap size."
#define MENU_TWEAKS_SYS_RW "Mount /system read-only"
#define MENU_TWEAKS_SYS_RW_HELP "If this option is set /system will be remounted read-only during normal operation"

#define MENU_FS_HEADER "Filesystem changer\nFilesystem will be changed on next boot"

#define MENU_SCHEME_HEADER "Filesystem schemes"
#define MENU_SCHEME_DISABLED "Disable lagfix\n(d,db,c,s:rfs)"
#define MENU_SCHEME_DISABLED_HELP "This will reformat all partitions to rfs. This option is probably only useful if you like slowness."
#define MENU_SCHEME_EXT4 "Ext4 base\n(recommended)\n(d,db,c:ext4;s:rfs)"
#define MENU_SCHEME_EXT4_HELP "This will reformat /data,/dbdata and /cache to ext4. This is one of the most stable options."
#define MENU_SCHEME_EXT4_NORFS "Ext4 NO-RFS\n(d,db,c,s:ext4;noefs)"
#define MENU_SCHEME_EXT4_NORFS_HELP "This will reformat all partitions, including /system to ext4."
#define MENU_SCHEME_EXT4_OVERKILL "Ext4 Overkill\n(d,db,c:ext4+l;s:ext4;noefs)"
#define MENU_SCHEME_EXT4_OVERKILL_HELP "This will reformat all partitions (including /system) to ext4, and puts a loop device on them (except for /system)"
#define MENU_SCHEME_JFS "JFS base\n(d,db,c:jfs;s:rfs)"
#define MENU_SCHEME_JFS_HELP "This will format /data, /dbdata and /cache to JFS"
#define MENU_SCHEME_JFS_NORFS "JFS NO-RFS\n(d,db,c,s:jfs;noefs)"
#define MENU_SCHEME_JFS_NORFS_HELP "This will format all partitions to JFS, including /system"
#define MENU_SCHEME_EXT4_CRYPT "Encrypted ext4\n(d,db,c:ext4+crypt;s:ext4;noefs)"
#define MENU_SCHEME_EXT4_CRYPT_HELP "This will format all partitions to ext4 (including /system), and will encrypt them"

#define MENU_FS_ADVANCED "Advanced options"
#define MENU_FS_EXT2 "ext2"
#define MENU_FS_EXT2_HELP "The strandard ext filesystem, without journaling support. Very fast, but lacks extended features."
#define MENU_FS_EXT4 "ext4"
#define MENU_FS_EXT4_HELP "The fourth installment of the ext filesystem series, this has added journal and extents support. This is the most stable FS for the SGS. Journailng can be enabled/disabled at the ext4 tools later on."
#define MENU_FS_JFS "jfs"
#define MENU_FS_JFS_HELP "The Journaling file system, one of the earliest journaling file systems for linux. Although it has some nice features it is still not as stable as ext4"
#define MENU_FS_RFS "rfs"
#define MENU_FS_RFS_HELP "The original filesystem for SGS, whith it's own flaws."

#define MENU_FS_LOOP "Use a loop device"
#define MENU_FS_LOOP_HELP "This option will create a loop device on the partition, which will increase quadrant scores, but decrease stability"
#define MENU_FS_CRYPT "Encrypt partition"
#define MENU_FS_CRYPT_HELP "This option will encrypt the device. To decrypt one has to provide a password for it at every boot. All partitions will use the same password. At the moment you can only change password by disabling encryption on all partitions, then re-enabling them"

#define MENU_FS_MISC "Misc settings"
#define MENU_FS_NORFS "Use fake /efs partition"
#define MENU_FS_NORFS_HELP "With this option /efs will be copyed to your system partition, and will not be mounted at start. Use this option, to get a completely RFS-free config"
#define MENU_FS_BADRFS "Reformat /system\nfrom check to check=no"
#define MENU_FS_BADRFS_HELP "Enable this option, if you think you have your /system in an inconsitent state. If this option is set, on the next reboot, Steam will try to fix /system"
#define MENU_FS_RESET "Undo settings"
#define MENU_FS_RESET_HELP "This button will reset all your settings to the current filesystem config."

#define ADV_MENU_HEADER "Advanced and Debugging Menu"
#define ADV_MENU_WIPE_CACHE "Wipe Dalvik Cache"
#define ADV_MENU_WIPE_BATTERY "Wipe Battery Stats"
#define ADV_MENU_REPORT "Report Error"
#define ADV_MENU_KEYTEST "Key Test"
#define ADV_MENU_SCREENTEST "Screen Test"
#define ADV_MENU_SECRETTEST "Secret Input Screen Test"
#define ADV_MENU_PARTITION "Partition SD Card"
#define ADV_MENU_FIXPERM "Fix Permissions"

#define MENU_WIPE_CACHE_CONFIRM "Confirm wipe?"
#define MENU_WIPE_CACHE_YES "Yes - Wipe Cache"
#define MENU_WIPE_CACHE_DONE "Cache wipe complete.\n"

#define MENU_INSTALL_CONFIRM "Confirm install?"
#define MENU_INSTALL_YES "Yes - Install /sdcard/update.zip"
#define MENU_INSTALL_ABORT "Installation aborted.\n"
#define MENU_INSTALL_NEEDREBOOT "Reboot via menu to complete\ninstallation.\n"
#define MENU_INSTALL_DONE "Installation completed.\n"

#define ADV_MENU_WIPE_CACHE_CONFIRM "Confirm wipe?"
#define ADV_MENU_WIPE_CACHE_YES "Yes - Wipe Dalvik Cache"
#define ADV_MENU_WIPE_CACHE_DONE "Dalvik Cache wiped.\n"

#define ADV_MENU_WIPE_BATTERY_CONFIRM "Confirm wipe?"
#define ADV_MENU_WIPE_BATTERY_YES "Yes - Wipe Battery Stats"

#define STEAM_MENU_HEADER "Steam Kernel Menu"
#define STEAM_MENU_SU "Install Superuser\001Installs root on the device"
#define STEAM_MENU_BOOT "Boot options\001Boot options, like log output selection or tweaks"
#define STEAM_MENU_BLN "BLN Options\001Turns BLN on or off"
#define STEAM_MENU_CWM "Advanced and Debugging Menu\001Advanced and debugging options (Old advanced menu of CWM)"
#define STEAM_MENU_LAGFIX "Filesystem management\n(lagfix menu)\001Filesystem conversion and lagfixing options"
#define STEAM_MENU_FM "File manager\001Start the file manager to check and modify the filesystem."
#define STEAM_MENU_ABOUT "About"

#define STEAM_ABOUT_UNINSTALL "Uninstall Steam"
#define STEAM_ABOUT_UNINSTALL_CONFIRM "Do you really want to\nuninstall Steam Kernel?"
#define STEAM_ABOUT_UNINSTALL_YES "Yes - I don't need this software"
#define STEAM_ABOUT_UNINSTALL_OK "Uninstall initialized, please reboot your device to proceed. The device might reboot multiple times"

#define BLN_NOT_AVAILABLE "BackLightNotification 2.2 kernel support is needed for these options to work!\n"
#define STEAM_NOT_AVAILABLE "Steam based kernel is needed for these options to work!\n"

#define ERROR_NOTOPEN "Could not open file\n"
#define ERROR_UNKNOWN "Error\n"

#define UPDATE_APPLY_SDCARD "Apply sdcard:update.zip"
#define UPDATE_CHOOSE_ZIP "Choose zip from sdcard"
#define UPDATE_SIG_CHECK "Toggle signature verification"
#define UPDATE_ASSERTS "Toggle script asserts"
#define UPDATE_APPLY_SDCARD2 "Apply external_sd:update.zip"
#define UPDATE_CHOOSE_ZIP2 "Choose zip from external_sd"

#define NANDROID_MAIN_MENU_HEADER "Nandroid Backup"
#define NANDROID_MAIN_BACKUP "Backup\001This will back up all of your partitions"
#define NANDROID_MAIN_ABACKUP "Advanced Backup\001This will let you choose which partition you want to backup"
#define NANDROID_MAIN_RESTORE "Restore\001This will restore all partitions"
#define NANDROID_MAIN_ARESTORE "Advanced Restore\001This will let you choose which partition to restore"

#define NANDROID_HEADER "Choose an image to restore"
#define NANDROID_YES "Yes - Restore"
#define NANDROID_CONFIRM "Confirm restore?"
#define NANDROID_ADVANCED "Nandroid Advanced Restore"

#define NANDROID_BADVANCED "Nandroid Advanced Backup"

#define NANDROID_RESBOOT "Restore boot"
#define NANDROID_RESSYSTEM "Restore system"
#define NANDROID_RESDATA "Restore data"
#define NANDROID_RESDATADATA "Restore datadata"
#define NANDROID_RESMISC "Restore .android_secure"
#define NANDROID_RESCACHE "Restore cache"
#define NANDROID_RESSDEXT "Restore sd-ext"
#define NANDROID_NOFORMAT "Use simple format"
#define NANDROID_NOFORMAT_HELP "This option will simply erase all files from the partition prior restoring, instead of potentially re-creating the filesystem. This is the preferred options."
#define NANDROID_DORESTORE "Restore"
#define NANDROID_DORESTORE_HELP "This option will start the restore process"

#define NANDROID_BACBOOT "Backup boot"
#define NANDROID_BACSYSTEM "Backup system"
#define NANDROID_BACDATA "Backup data"
#define NANDROID_BACDATADATA "Backup datadata"
#define NANDROID_BACMISC "Backup .android_secure"
#define NANDROID_BACCACHE "Backup cache"
#define NANDROID_BACSDEXT "Backup sd-ext"
#define NANDROID_BACEFS "Backup efs"
#define NANDROID_DOBACKUP "Backup"
#define NANDROID_DOBACKUP_HELP "This option will start the backup process"

#define PARTITION_HEADER "Mounts and Storage Menu"
#define PARTITION_CONFIRM "Confirm format?"
#define PARTITION_YES "Yes - Format"
#define PARTITION_USB_STORAGE "Mount USB Storage"

#define CONFIRM_NOUNDO "This can not be undone."
#define CONFIRM_NO "No"

#define OEM_RECOVERY_HEADER "Recovery version chooser"
#define OEM_RECOVERY_2E "Use 2e Recovery\n(recommended for older CSC files)"
#define OEM_RECOVERY_2E_HELP "Choose this option, if you have flashed an older CSC file (usually CSC files for Éclair), and want to install that"
#define OEM_RECOVERY_3E "Use 3e Recovery\n(recommended for newer CSC files)"
#define OEM_RECOVERY_3E_HELP "Choose this option, if you have flashed a newer CSC file (usually CSC files for Froyo), and want to install that"
#define OEM_RECOVERY_STEAM "Use Steam Recovery"
#define OEM_RECOVERY_STEAM_HELP "Choose this option, if you have flashed an older CSC file (usually CSC files for Éclair), and want to install that"

#define OEM_AFTERBURNER_ASKUSER "\n\n--- AFTERBURNER ---\nNo Afterburner file found on your sdcard. The sdcard is now mounted as a mass storage device. If you want to use afterburner put the installation file (usually called afterburner.zip) inside the 'steam' directory, then press 'Unmount'"
#define OEM_AFTERBURNER_ERROR "Can't open %s\n(%s)\n"
#define OEM_AFTERBURNER_HEADER "Afterburner\nPost-flash install tool"
#define OEM_AFTERBURNER_DOINSTALL "Install"
#define OEM_AFTERBURNER_DOINSTALL_HELP "This will install the selected packages"
#define OEM_AFTERBURNER_CONFIRM "Confirm installation?"
#define OEM_AFTERBURNER_YES "Yes - install selected elements"
#define OEM_AFTERBURNER_INSTALLING "Installing %s\n"
#define OEM_AFTERBURNER_NOTFOUND "Afterburner install file could not be found"
// mount logging

#define PARTITION_INFORMATION "Partition information for %s: %d\n"

// locale data for init/earlyinit/postinit

#define INIT_DEVICES_DONE "Done initializing devices\n"
#define INIT_LOAD_GRAPHICS "Loading up graphics\n"
#define INIT_CREATE_MOUNT "Creating mount points\n"

#define INIT_MOUNTING "Mounting type %d on %s\n"
#define INIT_UNMOUNTING "Unmounting %s\n"
#define INIT_AUTODETECT "Autodetecting filesystem on %s\n"
#define INIT_CREATE "Creating filesystem type %d on %s\n"
#define INIT_STAGE "STAGE %d STARTING\n"

#define INIT_RFS_INCONSISTENT_FIX_HEADER "Your /system partition seems to be in an\ninconsistent state! Steam can try\nto fix it, although the process might fail!\nPlease chose from the options below."
#define INIT_RFS_INCONSISTENT_FIX_TAR "Fix the partition by reformatting it\001This option will save your /system partition to the /sdcard, then reformats /system, and copies back the data. It will erase the saved data from your sdcard."
#define INIT_RFS_INCONSISTENT_FIX_NONE "Don't fix /system\nmount without check=no\001This option will not do anything with your /system partition, and will mount it with the bad mount options."
#define INIT_RFS_INCONSISTENT_FIX_NONE2 "Don't fix /system\nmount with check=no\001This option will not do anything with your /system partition, but will mount it with the good mount options. Use this option only if you're sure the autodetect feature is incorrect about /system being in an inconsistent state!"

#define CONVERT_NO_SPACE "Not enough free space found on /sdcard!\n"
#define CONVERT_SPACE_NEEDS "Space needed: %lluMB, avialable: %lluMB\n"
#define CONVERT_LOAD_FM "Loading File Manager!\n"
#define CONVERT_NO_FM "File manager disabled for security reasons!\n"
#define CONVERT_BACKUP_FAILED "Backup of partition failed!\n"
#define CONVERT_RESTORE_FAILED "Restoring of partition failed!\n"
#define CONVERT_CONTINUE_ANYWAY "Continuing anyway...\n"
#define CONVERT_WAIT_REBOOT "Rebooting in 5 seconds...\n"
#define CONVERT_SYSTEM_SURE "Converting filesystem on /system"
#define CONVERT_SYSTEM_CONFIRM "Yes - convert /system"
#define CONVERT_CRYPT_FAILED "Creation of crypt partition failed! Code: %d\n"

#define CONVERT_FS_HEADER "Converting filesystems"
#define CONVERT_FS_FULLBACKUP "Do a complete backup and restore\n(recommended)\001This option will create a nandroid backup of your partitions, and restores them from this backup after the filesystem conversion is done"
#define CONVERT_FS_ONLYBACKUP "Backup, but don't restore\n(this will result in a factory reset)\001This option will create a nandroid backup, but after formatting, it will not restore the files from that. Choose this if you want a backup and a clean start with your new config"
#define CONVERT_FS_RMBACKUP "Backup and restore, but erase backup\001This option will erase your backup, after conversion for security reasons."
#define CONVERT_FS_RMALL "No backup, just reformat\n(this will erase all your data)\001This option will erase all your data from the partitions. Chose this option, if you don't care about your data at all."
#define CONVERT_FS_CANCEL "Changed my mind, don't reformat\nthe filesystem\001Chose this option, if you have changed your mind"

#define INSTALL_STEAM_HEADER "Steam doesn't seem to be installed, or it was\nrecently uninstalled. Without it some options\nwill not be available. Do you want to install\nSteam? (you can uninstall it anytime)"
#define INSTALL_STEAM_YES "Yes, install Steam Kernel!\001This option will create a config file on your system partition, that will store all your steam configs. Without the config file a lot of Steam Kernel options, like some lagfix options, boot animations or tweaks will not work!"
#define INSTALL_STEAM_NO "No, don't install Steam Kernel!\001Without installation you can still run both main Android and Steam Recovery, and some options will be still available, like filesystem detection."

#define UPGRADE_STEAM_HEADER "The Steam version on your disk differs from\nthe on inside the kernel.\nThis can be because of multiple options.\nWhat should I do?"
#define UPGRADE_STEAM_YES "Upgrade the config files on the disk\nChoose this option if you have\nrecently switched from a Steam\nbased kernel to another\001Choose this option, if you have previously used a Steam based kernel, and flashed another kernel, which is also based on Steam"
#define UPGRADE_STEAM_NO "Replace the config files on the disk\nThis will erase your previous\nSteam config. Choose this option, if your\nold kernel was not based on Steam\001Choose this option, if you have previously used a Steam based kernel, then switched to another, non-Steam based one without properly uninstalling Steam first"
#define UPGRADE_STEAM_SKIP "Do nothing\nThis option is not recommended\001This option will leave the config file on the disk intact, and will not perform any kind of upgrade."

#define CREATE_PARTITION_HEADER "Partition %s\ncould not be mounted!\nWhat should I do?"
#define CREATE_PARTITION_RFS "Format partition to RFS\001This option will format the partition to RFS. All data will be lost. Forever"
#define CREATE_PARTITION_EXT2 "Format partition to EXT2\001This option will format the partition to EXT2. All data will be lost. Forever"
#define CREATE_PARTITION_EXT4 "Format partition to EXT4\001This option will format the partition to EXT4. All data will be lost. Forever"
#define CREATE_PARTITION_JFS "Format partition to JFS\001This option will format the partition to JFS. All data will be lost. Forever"
#define CREATE_PARTITION_NONE "Don't do anything\001This option will not do anything with the partition. Chose this if you want to try saving the data from it at a later stage"
#define CREATE_PARTITION_FM "Load File Manager\001This option will load up file manager so you can try fixing the problem yourselves."

#define SECRET_PASSWORD_MISMATCH "The two passwords didn't match!\n"
#define SECRET_PASSWORD_AGAIN "Please swype the password again\n"
#define SECRET_HOWTO "Swipe one or multiple shapes, then press the HOME button.\n"
#define SECRET_HOWTO_TEST "Swipe one or multiple shapes then press the home button. The entered password will be shown after the test!\n"
#define SECRET_ENTER_PASS "Enter the password\n"
#define SECRET_ENTER_FOR "Enter password for %s\n"
#define SECRET_FAIL "Bad password\n"

#define TWEAKS_ENABLE_IOSCHED "Enabling IO Scheduler tweaks\n"
#define TWEAKS_ENABLE_KERNELVM "Enabling kernel VM tweaks\n"
#define TWEAKS_ENABLE_KERNELSCHED "Enablink kernel scheduler tweaks\n"
#define TWEAKS_ENABLE_MISC "Enabling miscelangeous tweaks\n"

#define INITD_EARLYSTART "%s USER EARLY INIT START\n"
#define INITD_EARLYDONE "%s USER EARLY INIT DONE\n"
#define INITD_START "%s USER INIT START\n"
#define INITD_DONE "%s USER INIT DONE\n"
#define INITD_STARTX "%s START %s\n"
#define INITD_DONEX "%s DONE %s\n"

#define EARLY_LOGAPP "Log display application\n\n\n"
#define EARLY_USAGE "Tap screen to switch between logs.\n"
#define EARLY_POSTINITSTART "Post-init started, shutting down display\n"
#define EARLY_BOOTCOMPLETE "Boot completed.\n\n"
#define EARLY_KILLBOOTANIM "Killing bootanimation processes just in case.\n\n"
#define EARLY_DONE "Done.\n"

#define INIT_HALT "Init will now halt!\n"
